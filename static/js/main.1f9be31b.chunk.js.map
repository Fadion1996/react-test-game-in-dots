{"version":3,"sources":["Components/Game/GameMenu/gameMenu.module.css","Components/Board/board.module.css","Components/Game/GameContent/gameContent.module.css","Components/Game/GameContent/GamePlay/gamePlay.module.css","App.module.css","Components/Game/game.module.css","Components/Game/GameContent/GameContent.js","Components/Game/GameMenu/GameMenu.js","Components/Game/GameContent/GamePlay/GamePlay.js","Components/Game/Game.js","Components/Board/Board.js","App.js","index.js"],"names":["module","exports","play","GameMenu","players","playText","setPlayers","gameModes","setGameModes","mode","setMode","setActivePlayer","scoreComputer","scoreUser","useState","isOpen","setIsOpen","name","setName","useEffect","fetch","then","res","json","result","console","log","formatDate","date","day","getDate","monthIndex","getMonth","year","getFullYear","className","css","gameMenu","dropdown","active","standard","type","onClick","dropdown_list","Object","keys","map","item","i","activeMode","value","key","input","placeholder","onChange","e","target","button","toast","info","success","id","Math","random","winner","Date","GamePlay","activeTile","index","setClicked","clicked","setScoreUser","setScoreComputer","disabled","background","backgroundColor","gamePlay","style","tile","GameContent","activePlayer","setPlayText","tiles","setTiles","size","setSize","setActiveTile","setDisabled","stop","setStop","prevTile","ref","useRef","current","usePrevious","field","oldArray","delay","clearInterval","setInterval","round","gameContent","marginTop","width","height","border","display","justifyContent","margin","flexWrap","content","text","Game","score","game","Board","board","title","list","player","App","configure","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1f9be31b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gameMenu\":\"gameMenu_gameMenu__cj71d\",\"standard\":\"gameMenu_standard__3DK6U\",\"active\":\"gameMenu_active__2WEqI\",\"button\":\"gameMenu_button__2NtVc\",\"input\":\"gameMenu_input__wOjkS\",\"dropdown\":\"gameMenu_dropdown__19sBr\",\"dropdown_list\":\"gameMenu_dropdown_list__3UesN\",\"mode\":\"gameMenu_mode__2kXjt\",\"activeMode\":\"gameMenu_activeMode__1ltdk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"board_board__25jEp\",\"title\":\"board_title__2KhId\",\"list\":\"board_list__k4eRq\",\"item\":\"board_item__1BUNE\",\"name\":\"board_name__QgCwc\",\"score\":\"board_score__1-rGk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"gameContent_content__3VyBk\",\"text\":\"gameContent_text__1vbYg\",\"gameContent\":\"gameContent_gameContent__2H-bN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gamePlay\":\"gamePlay_gamePlay__1g5Il\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__16ZpL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"game_game__1hXDU\"};","import React, { useEffect, useState, useRef } from 'react';\n\nimport css from './gameContent.module.css';\nimport GamePlay from './GamePlay/GamePlay';\n\nlet play;\n\nconst GameContent = ({\n    gameModes,\n    mode,\n    scoreUser,\n    activePlayer,\n    setScoreUser,\n    scoreComputer,\n    setScoreComputer,\n    setPlayText,\n}) => {\n    const [tiles, setTiles] = useState([]);\n    const [size, setSize] = useState('230px');\n    const [activeTile, setActiveTile] = useState(true);\n    const [clicked, setClicked] = useState(true);\n    const [disabled, setDisabled] = useState(true);\n    const [stop, setStop] = useState(false);\n    const prevTile = usePrevious({ activeTile });\n\n    useEffect(() => {\n        setTiles([]);\n        if (gameModes[mode]) {\n            const { field } = gameModes[mode];\n            switch (field) {\n                case 5:\n                    setSize('230px');\n                    break;\n                case 10:\n                    setSize('460px');\n                    break;\n                case 15:\n                    setSize('690px');\n                    break;\n                default:\n                    setSize('230px');\n            }\n            for (let i = 0; i < field * field; i++) {\n                setTiles(oldArray => [...oldArray, { id: i }]);\n            }\n        } else {\n            for (let i = 0; i < 25; i++) {\n                setTiles(oldArray => [...oldArray, { id: i }]);\n            }\n        }\n    }, [mode]);\n\n    useEffect(() => {\n        if (activePlayer.winner !== 'Message here') {\n            const { delay, field } = gameModes[mode];\n            setDisabled(false);\n            clearInterval(play);\n\n            if (!stop) {\n                play = setInterval(() => {\n                    setActiveTile(Math.round(Math.random() * field * field));\n                    setClicked(true);\n                }, delay);\n                console.log('Begin Game!', delay);\n            } else {\n                console.log('Stop Game!');\n                clearInterval(play);\n                setDisabled(true);\n            }\n        }\n    }, [activePlayer, stop]);\n\n    function usePrevious(value) {\n        const ref = useRef();\n        useEffect(() => {\n            ref.current = value;\n        });\n        return ref.current;\n    }\n\n    useEffect(() => {\n        if (prevTile) {\n            if (scoreComputer >= 10 || scoreUser >= 10) {\n                setStop(true);\n                setPlayText('Play again');\n            } else if (clicked !== prevTile.activeTile) {\n                setScoreComputer(scoreComputer + 1);\n            }\n        }\n    }, [activeTile]);\n\n    const gameContent = {\n        marginTop: '25px',\n        width: size,\n        height: size,\n        border: '1px solid #ebebed',\n        display: 'flex',\n        justifyContent: 'center',\n        margin: '25px auto',\n        flexWrap: 'wrap',\n    };\n\n    return (\n        <div className={css.content}>\n            <p className={css.text}>\n                {activePlayer.winner !== 'Message here'\n                    ? scoreComputer >= 10\n                        ? `${activePlayer.winner} loser / computer winner`\n                        : ''\n                    : scoreUser >= 10\n                    ? `${activePlayer.winner} winner / computer loser`\n                    : ''}\n            </p>\n            <p className={css.text}>{`${scoreUser} : ${scoreComputer}`}</p>\n            <div className=\"gameContent\" style={gameContent}>\n                {tiles.map((item, index) => (\n                    <GamePlay\n                        tile={item}\n                        key={index}\n                        index={index}\n                        activeTile={activeTile}\n                        clicked={clicked}\n                        setClicked={setClicked}\n                        setScoreUser={setScoreUser}\n                        setScoreComputer={setScoreComputer}\n                        scoreUser={scoreUser}\n                        scoreComputer={scoreComputer}\n                        disabled={disabled}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default GameContent;\n","import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\n\nimport css from './gameMenu.module.css';\n\nconst GameMenu = ({\n    players,\n    setPlayers,\n    playText,\n    gameModes,\n    setGameModes,\n    mode,\n    setMode,\n    setActivePlayer,\n    scoreComputer,\n    scoreUser,\n}) => {\n    const [isOpen, setIsOpen] = useState(false);\n    const [name, setName] = useState('');\n\n    useEffect(() => {\n        fetch(`http://starnavi-frontend-test-task.herokuapp.com/game-settings`)\n            .then(res => res.json())\n            .then(result => {\n                console.log(result);\n                setGameModes(result);\n            });\n    }, []);\n\n    const formatDate = date => {\n        const monthNames = [\n            'January',\n            'February',\n            'March',\n            'April',\n            'May',\n            'June',\n            'July',\n            'August',\n            'September',\n            'October',\n            'November',\n            'December',\n        ];\n\n        const day = date.getDate();\n        const monthIndex = date.getMonth();\n        const year = date.getFullYear();\n        // TODO: change minutes and hours to the score!\n        return `${scoreUser}:${scoreComputer}; ${day} ${monthNames[monthIndex]} ${year}`;\n    };\n\n    const handleSubmit = e => {\n        if (!name) {\n            toast.info('Enter Name');\n        } else if (mode === 'Pick game mode') {\n            toast.info('Choose game mode');\n        } else {\n            toast.success('If Player win send to Dashboard', players);\n            // setPlayers(...players, avtivePlayer);\n            setActivePlayer({\n                id: Math.random(),\n                winner: name,\n                date: formatDate(new Date()),\n            });\n        }\n    };\n\n    return (\n        <div className={css.gameMenu}>\n            <div className={css.dropdown}>\n                <button\n                    className={isOpen ? css.active : css.standard}\n                    type=\"submit\"\n                    onClick={() => setIsOpen(!isOpen)}\n                >\n                    {mode}\n                </button>\n                {isOpen && (\n                    <div className={css.dropdown_list}>\n                        {Object.keys(gameModes).map((item, i) => (\n                            <p\n                                className={\n                                    mode !== item ? css.mode : css.activeMode\n                                }\n                                value={item}\n                                onClick={() => {\n                                    setMode(item);\n                                    setIsOpen(false);\n                                }}\n                                key={i}\n                            >\n                                {item}\n                            </p>\n                        ))}\n                    </div>\n                )}\n            </div>\n            <input\n                className={css.input}\n                placeholder=\"Enter your name\"\n                onChange={e => setName(e.target.value)}\n                value={name}\n            />\n            <button className={css.button} type=\"submit\" onClick={handleSubmit}>\n                {playText}\n            </button>\n        </div>\n    );\n};\n\nexport default GameMenu;\n","import React, { useEffect } from 'react';\n\nimport css from './gamePlay.module.css';\n\nconst GamePlay = ({\n    activeTile,\n    index,\n    setClicked,\n    clicked,\n    setScoreUser,\n    setScoreComputer,\n    scoreUser,\n    scoreComputer,\n    disabled,\n}) => {\n    const active = {\n        background: activeTile === index && '#42d8e8',\n        backgroundColor:\n            clicked === activeTile\n                ? index === activeTile && '#07e871'\n                : index !== activeTile\n                ? clicked === index && '#e85a5f'\n                : activeTile === index && '#42d8e8',\n    };\n\n    useEffect(() => {\n        if (clicked === index) {\n            if (index === activeTile) {\n                setScoreUser(scoreUser + 1);\n            } else {\n                setScoreComputer(scoreComputer + 1);\n            }\n        }\n    }, [clicked]);\n\n    return (\n        <div\n            className={css.gamePlay}\n            style={active}\n            onClick={() => !disabled && setClicked(index)}\n        >\n            <div className={css.tile} />\n        </div>\n    );\n};\n\nexport default GamePlay;\n","import React, { useState } from 'react';\nimport GameMenu from './GameMenu/GameMenu';\nimport GameContent from './GameContent/GameContent';\n\nimport css from './game.module.css';\n\nconst Game = ({ players, setPlayers, score }) => {\n    const [gameModes, setGameModes] = useState([]);\n    const [mode, setMode] = useState('Pick game mode');\n    const [playText, setPlayText] = useState('Play');\n    const [activePlayer, setActivePlayer] = useState({\n        winner: 'Message here',\n    });\n    const [scoreUser, setScoreUser] = useState(0);\n    const [scoreComputer, setScoreComputer] = useState(0);\n\n    return (\n        <div className={css.game}>\n            <GameMenu\n                players={players}\n                setPlayers={setPlayers}\n                gameModes={gameModes}\n                setGameModes={setGameModes}\n                mode={mode}\n                score={score}\n                playText={playText}\n                setMode={setMode}\n                setActivePlayer={setActivePlayer}\n                scoreUser={scoreUser}\n                scoreComputer={scoreComputer}\n            />\n            <GameContent\n                gameModes={gameModes}\n                mode={mode}\n                activePlayer={activePlayer}\n                scoreUser={scoreUser}\n                scoreComputer={scoreComputer}\n                setScoreUser={setScoreUser}\n                setScoreComputer={setScoreComputer}\n                setPlayText={setPlayText}\n            />\n        </div>\n    );\n};\n\nexport default Game;\n","import React from 'react';\n\nimport css from './board.module.css';\n\nconst Board = ({ players }) => {\n    return (\n        <div className={css.board}>\n            <p className={css.title}>Leader Board</p>\n            <ul className={css.list}>\n                {players.map((player, i) => {\n                    return (\n                        <li className={css.item} key={i}>\n                            <span className={css.name}>{player.winner}</span>\n                            <span className={css.score}>{player.date}</span>\n                        </li>\n                    );\n                })}\n            </ul>\n        </div>\n    );\n};\n\nexport default Board;\n","import React, { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport css from './App.module.css';\nimport { Game, Board } from './Components';\n\nfunction App() {\n    const [players, setPlayers] = useState([]);\n    toast.configure();\n\n    useEffect(() => {\n        fetch(`http://starnavi-frontend-test-task.herokuapp.com/winners`)\n            .then(res => res.json())\n            .then(result => {\n                console.log(result);\n                setPlayers(result);\n            });\n    }, []);\n\n    return (\n        <div className={css.App}>\n            <Game players={players} setPlayers={setPlayers} />\n            <Board players={players} />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}